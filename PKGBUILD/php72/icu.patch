--- 7.2.34/ext/intl/breakiterator/codepointiterator_internal.cpp	2020-09-30 08:15:54.000000000 +0300
+++ 7.2.34/ext/intl/breakiterator/codepointiterator_internal.cpp	2021-11-30 20:43:09.078705667 +0200
@@ -74,7 +74,11 @@
 	clearCurrentCharIter();
 }
 
+#if U_ICU_VERSION_MAJOR_NUM >= 70
+bool CodePointBreakIterator::operator==(const BreakIterator& that) const
+#else
 UBool CodePointBreakIterator::operator==(const BreakIterator& that) const
+#endif
 {
 	if (typeid(*this) != typeid(that)) {
 		return FALSE;
--- 7.2.34/ext/intl/breakiterator/codepointiterator_internal.h	2020-09-30 08:15:54.000000000 +0300
+++ 7.2.34/ext/intl/breakiterator/codepointiterator_internal.h	2021-11-30 20:45:34.371317671 +0200
@@ -36,8 +36,11 @@
 
 		virtual ~CodePointBreakIterator();
 
+#if U_ICU_VERSION_MAJOR_NUM >= 70
+		virtual bool operator==(const BreakIterator& that) const;
+#else
 		virtual UBool operator==(const BreakIterator& that) const;
-
+#endif
 		virtual CodePointBreakIterator* clone(void) const;
 
 		virtual UClassID getDynamicClassID(void) const;
--- 7.2.34/ext/intl/locale/locale_methods.c	2020-09-30 08:15:54.000000000 +0300
+++ 7.2.34/ext/intl/locale/locale_methods.c	2021-11-30 20:46:15.912078221 +0200
@@ -1333,7 +1333,7 @@
 		if( token && (token==cur_lang_tag) ){
 			/* check if the char. after match is SEPARATOR */
 			chrcheck = token + (strlen(cur_loc_range));
-			if( isIDSeparator(*chrcheck) || isEndOfTag(*chrcheck) ){
+			if( isIDSeparator(*chrcheck) || isKeywordSeparator(*chrcheck) || isEndOfTag(*chrcheck) ){
 				if( cur_lang_tag){
 					efree( cur_lang_tag );
 				}
@@ -1558,7 +1558,7 @@
 # define BANG "!"
 #else
 # define BANG
-#endif	
+#endif
 	if(zend_parse_parameters( ZEND_NUM_ARGS(), "as|bS" BANG, &arr, &loc_range, &loc_range_len,
 		&boolCanonical,	&fallback_loc_str) == FAILURE) {
 		intl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,	"locale_lookup: unable to parse input params", 0 );

